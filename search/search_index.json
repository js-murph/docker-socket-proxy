{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Docker Socket Proxy","text":"<p>A secure proxy for Docker socket with fine-grained access control and request rewriting capabilities.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Multiple Socket Support: Create multiple proxy sockets with different access control rules</li> <li>Fine-grained ACLs: Control access to Docker API endpoints based on path, method, and request content</li> <li>Request Rewriting: Modify Docker API requests on-the-fly (replace, upsert, or delete fields)</li> <li>Command-line Interface: Easy-to-use CLI for managing proxy sockets</li> </ul>"},{"location":"#but-why","title":"But Why?","text":"<p>Every now and then against your better judgement you may find yourself doing docker-in-docker, this helps you enforce some rules on the docker socket.</p> <p>Maybe you are doing some docker-in-docker in CI and want to make sure that a particular mount is available on every subcontainer. Or maybe you're running Traefik using the Docker socket and want to make sure it can only access particular endpoints, in that case we got you covered.</p> <p>This is definitely not an appropriate replacement for a secure Docker runtime such as sysbox or kata containers.</p>"},{"location":"#installation","title":"Installation","text":"<p>Grab it from the releases page and move it to a directory in your PATH.</p> <pre><code>curl -sSL https://github.com/js-murph/docker-socket-proxy/releases/latest/download/docker-socket-proxy.tgz\ntar -xzf docker-socket-proxy.tgz\nmv docker-socket-proxy /usr/local/bin/docker-socket-proxy\n</code></pre>"},{"location":"#quick-start","title":"Quick Start","text":"<p>To start the server run:</p> <pre><code>docker-socket-proxy daemon\n</code></pre> <p>To create a new proxy socket run:</p> <pre><code>docker-socket-proxy socket create -c /path/to/config.yaml\n</code></pre> <p>This will return a socket that you can use instead of the Docker socket with the rules applied.</p> <p>See the Getting Started section for more details.</p>"},{"location":"#configuration-example","title":"Configuration Example","text":"<pre><code>config:\n  propagate_socket: \"/var/run/docker.sock\"\n\nrules:\n  - match:\n      path: \"/v1.*/volumes\"\n      method: \"GET\"\n    actions:\n      - action: \"deny\"\n        reason: \"Listing volumes is restricted\"\n\n  - match:\n      path: \"/v1.*/containers/create\"\n      method: \"POST\"\n      contains:\n        Env:\n          - \"BLOCK=true\"\n    actions:\n      - action: \"deny\"\n        reason: \"Blocked creation of containers with restricted env variables\"\n\n  - match:\n      path: \"/.*\"\n      method: \".*\"\n    actions:\n      - action: \"allow\"\n        reason: \"Allow all other requests, the default is to block everything\"\n</code></pre> <p>See the Configuration section for more details.</p>"},{"location":"cli-reference/","title":"CLI Reference","text":"<p>Docker Socket Proxy provides a command-line interface for managing the proxy server and sockets. This reference documents all available commands and their options.</p>"},{"location":"cli-reference/#global-options","title":"Global Options","text":"<p>These options apply to all commands:</p> <pre><code>--help, -h      Show help for a command\n</code></pre>"},{"location":"cli-reference/#daemon","title":"daemon","text":"<p>Starts the Docker Socket Proxy daemon. The daemon proxies requests to the Docker daemon and also provides a management socket so that it can be configured.</p> <pre><code>docker-socket-proxy daemon [flags]\n</code></pre>"},{"location":"cli-reference/#options","title":"Options","text":"<pre><code>--management-socket string   Path to the management socket (default \"/var/run/docker-proxy/management.sock\")\n--docker-socket string       Path to the Docker daemon socket (default \"/var/run/docker.sock\")\n</code></pre>"},{"location":"cli-reference/#example","title":"Example","text":"<pre><code># Start the daemon with default settings\ndocker-socket-proxy daemon\n\n# Start the daemon with a custom Docker socket\ndocker-socket-proxy daemon --docker-socket /path/to/custom/docker.sock\n</code></pre>"},{"location":"cli-reference/#socket","title":"socket","text":"<p>Commands for managing proxy sockets.</p> <pre><code>docker-socket-proxy socket [command]\n</code></pre>"},{"location":"cli-reference/#available-commands","title":"Available Commands","text":"<ul> <li><code>create</code>: Create a new proxy socket</li> <li><code>delete</code>: Delete an existing proxy socket</li> <li><code>list</code>: List all available proxy sockets</li> <li><code>describe</code>: Show details about a proxy socket</li> </ul>"},{"location":"cli-reference/#socket-create","title":"socket create","text":"<p>Creates a new proxy socket with the specified configuration.</p> <pre><code>docker-socket-proxy socket create [flags]\n</code></pre>"},{"location":"cli-reference/#options_1","title":"Options","text":"<pre><code>--config, -c string   Path to socket configuration file (yaml)\n--output              Output format, options are: yaml, json, text, silent (defaults to yaml)\n</code></pre>"},{"location":"cli-reference/#example_1","title":"Example","text":"<pre><code># Create a new socket with a configuration file\ndocker-socket-proxy socket create -c /path/to/config.yaml\n</code></pre>"},{"location":"cli-reference/#socket-delete","title":"socket delete","text":"<p>Deletes an existing proxy socket.</p> <pre><code>docker-socket-proxy socket delete [socket-path]\n</code></pre>"},{"location":"cli-reference/#example_2","title":"Example","text":"<pre><code># Delete a socket by name\ndocker-socket-proxy socket delete my-socket.sock\n\n# Delete a socket by full path\ndocker-socket-proxy socket delete /var/run/docker-proxy/my-socket.sock\n</code></pre>"},{"location":"cli-reference/#socket-list","title":"socket list","text":"<p>Lists all available proxy sockets.</p> <pre><code>docker-socket-proxy socket list\n</code></pre>"},{"location":"cli-reference/#example_3","title":"Example","text":"<pre><code># List all sockets\ndocker-socket-proxy socket list\n</code></pre>"},{"location":"cli-reference/#socket-describe","title":"socket describe","text":"<p>Shows detailed information about a proxy socket, including its configuration.</p> <pre><code>docker-socket-proxy socket describe [socket-name]\n</code></pre>"},{"location":"cli-reference/#example_4","title":"Example","text":"<pre><code># Describe a socket\ndocker-socket-proxy socket describe my-socket.sock\n</code></pre>"},{"location":"getting-started/","title":"Getting Started","text":"<p>This guide will help you get started with Docker Socket Proxy.</p>"},{"location":"getting-started/#prerequisites","title":"Prerequisites","text":"<ul> <li>Docker installed and running</li> <li>Basic understanding of Docker and its API</li> <li>Administrative privileges (for creating and managing sockets)</li> </ul>"},{"location":"getting-started/#installation","title":"Installation","text":"<p>Grab the latest release from GitHub and move it to a directory in your PATH:</p> <pre><code>curl -sSL https://github.com/js-murph/docker-socket-proxy/releases/latest/download/docker-socket-proxy.tgz\ntar -xzf docker-socket-proxy.tgz\nmv docker-socket-proxy /usr/local/bin/docker-socket-proxy\n</code></pre>"},{"location":"getting-started/#running-the-daemon","title":"Running the Daemon","text":"<p>The Docker Socket Proxy daemon is the core service that manages proxy sockets. Start it with:</p> <pre><code>docker-socket-proxy daemon\n</code></pre> <p>This will:</p> <ul> <li>Create the socket directory at <code>/var/run/docker-proxy/</code></li> <li>Start the management socket at <code>/var/run/docker-proxy/management.sock</code></li> <li>Begin listening for socket creation/deletion requests</li> </ul> <p>For production use, you may want to run the daemon as a systemd service. An example service file is provided in the repository at <code>examples/docker-socket-proxy.service</code>.</p>"},{"location":"getting-started/#creating-your-first-proxy-socket","title":"Creating Your First Proxy Socket","text":"<ol> <li>Create a configuration file (e.g., <code>config.yaml</code>):</li> </ol> <pre><code>config:\n  propagate_socket: \"/var/run/docker.sock\"\n\nrules:\n  - match:\n      path: \"/v1.*/volumes\"\n      method: \"GET\"\n    actions:\n      - action: \"deny\"\n        reason: \"Listing volumes is restricted\"\n  - match:\n      path: \"/v1.*/containers/create\"\n      method: \"POST\"\n    actions:\n      - action: \"upsert\"\n        update:\n          Env:\n            - \"FUN=yes\"\n      - action: \"replace\"\n        contains:\n          Env:\n            - \"DEBUG=true\"\n        update:\n          Env:\n            - \"DEBUG=false\"\n      - action: \"delete\"\n        contains:\n          Env:\n            - \"PANTS=.*\"\n</code></pre> <ol> <li>Create the proxy socket:</li> </ol> <pre><code>docker-socket-proxy socket create -c config.yaml\n</code></pre> <p>The command will output the path to your new proxy socket, typically something like:</p> <pre><code>Socket created: /var/run/docker-proxy/socket-12345.sock\n</code></pre>"},{"location":"getting-started/#using-the-proxy-socket","title":"Using the Proxy Socket","text":"<p>You can now use this socket with Docker CLI or any other Docker client:</p> <pre><code>docker -H unix:///var/run/docker-proxy/socket-12345.sock ps\n</code></pre> <p>Or with Docker Compose by setting the <code>DOCKER_HOST</code> environment variable:</p> <pre><code>DOCKER_HOST=unix:///var/run/docker-proxy/socket-12345.sock docker-compose up\n</code></pre>"},{"location":"getting-started/#managing-proxy-sockets","title":"Managing Proxy Sockets","text":"<p>List all available proxy sockets:</p> <pre><code>docker-socket-proxy socket list\n</code></pre> <p>View the configuration of a specific socket:</p> <pre><code>docker-socket-proxy socket describe socket-12345.sock\n</code></pre> <p>Delete a socket when you no longer need it:</p> <pre><code>docker-socket-proxy socket delete socket-12345.sock\n</code></pre>"},{"location":"getting-started/#next-steps","title":"Next Steps","text":"<p>Now that you have a basic proxy socket running, you can:</p> <ol> <li>Learn more about configuration options</li> <li>Explore advanced rule configurations</li> <li>Check the CLI reference for all available commands</li> </ol>"},{"location":"configuration/","title":"Configuration Overview","text":"<p>Docker Socket Proxy uses YAML configuration files to define how proxy sockets behave. This page provides an overview of the configuration structure and options.</p>"},{"location":"configuration/#basic-structure","title":"Basic Structure","text":"<p>A configuration file has two main sections:</p> <pre><code>config:\n  propagate_socket: \"/var/run/docker.sock\"\n\nrules:\n  - match:\n      path: \"/v1.*/volumes\"\n      method: \"GET\"\n    actions:\n      - action: \"deny\"\n        reason: \"Listing volumes is restricted\"\n</code></pre>"},{"location":"configuration/#config-section","title":"Config Section","text":"<p>The <code>config</code> section contains global settings for the proxy socket:</p> Option Description Required Default <code>propagate_socket</code> Path to the Docker socket to proxy No -"},{"location":"configuration/#rules-section","title":"Rules Section","text":"<p>The <code>rules</code> section is contains a list of rules that impose modifications or restrictions on the requests to the Docker socket. Each rule is processed sequentially and has a <code>match</code> section and an <code>actions</code> section.</p> <p>The match section is used to determine if the rule should be applied to the request. The actions section is used to modify the request or respond to the request. Each action in a rule is processed sequentially and the order of the actions is important.</p>"},{"location":"configuration/#match-criteria","title":"Match Criteria","text":"<p>The <code>match</code> section supports the following fields:</p> Field Description Example <code>path</code> Regex pattern for the API path <code>/v1.*/containers/json</code> <code>method</code> HTTP method to match <code>GET</code>, <code>POST</code>, <code>DELETE</code> <code>contains</code> Content matching for request body See below <p>The <code>contains</code> field allows you to match based on the content of the request body. This is particularly useful for container creation requests where you want to match based on environment variables, volumes, or other container configuration.</p> <p>Example of content matching:</p> <pre><code>match:\n  path: \"/v1.*/containers/create\"\n  method: \"POST\"\n  contains:\n    Env:\n      - \"DEBUG=true\"\n</code></pre> <p>All match fields will attempt to match the entire string first and then attempt regex matching. The matching is done against the payload of the docker API request, so for available fields for matching see the Docker API documentation.</p>"},{"location":"configuration/#actions","title":"Actions","text":"<p>Below is a list of the currently supported actions:</p> Action Description <code>allow</code> Stop processing the rule list and immediately allow the request to proceed <code>deny</code> Stop processing the rule list and immediately deny the request and return an error <code>upsert</code> Add or replace fields in the request <code>replace</code> Replace matching fields in the request <code>delete</code> Delete matching fields from the request <p>For the <code>allow</code> and <code>deny</code> actions, you can provide a <code>reason</code> field for documentation:</p> <pre><code>action: \"deny\"\nreason: \"Privileged containers are not allowed\"\n</code></pre>"},{"location":"configuration/#upsert-action","title":"Upsert Action","text":"<p>Adds or updates fields in the request:</p> <pre><code>actions:\n  - action: \"upsert\"\n    update:\n      Env:\n        - \"SECURE=true\"\n</code></pre>"},{"location":"configuration/#replace-action","title":"Replace Action","text":"<p>Replaces matching fields in the request:</p> <pre><code>actions:\n  - action: \"replace\"\n    contains:\n      HostConfig:\n        Privileged: true\n    update:\n      HostConfig:\n        Privileged: false\n</code></pre>"},{"location":"configuration/#delete-action","title":"Delete Action","text":"<p>Deletes matching fields from the request:</p> <pre><code>actions:\n  - action: \"delete\"\n    contains:\n      Env:\n        - \"SECRET_.*\"\n</code></pre>"},{"location":"configuration/#complete-example","title":"Complete Example","text":"<p>Here's a complete example configuration:</p> <pre><code>config:\n  propagate_socket: \"/var/run/docker.sock\"\n\nrules:\n  - match:\n      path: \"/v1.*/volumes\"\n      method: \"GET\"\n    actions:\n      - action: \"deny\"\n        reason: \"Listing volumes is restricted\"\n\n  - match:\n      path: \"/v1.*/containers/create\"\n      method: \"POST\"\n      contains:\n        Env:\n          - \"BLOCK=true\"\n    actions:\n      - action: \"deny\"\n        reason: \"Blocked creation of containers with restricted env variables\"\n\n  - match:\n      path: \"/v1.*/containers/create\"\n      method: \"POST\"\n    actions:\n      - action: \"upsert\"\n        update:\n          Env:\n            - \"FUN=yes\"\n      - action: \"replace\"\n        contains:\n          Env:\n            - \"DEBUG=true\"\n        update:\n          Env:\n            - \"DEBUG=false\"\n      - action: \"replace\"\n        contains:\n          HostConfig:\n            Privileged: true\n        update:\n          HostConfig:\n            Privileged: false\n      - action: \"delete\"\n        contains:\n          Env:\n            - \"PANTS=.*\"\n\n  - match:\n      path: \"/.*\"\n      method: \".*\"\n    actions:\n      - action: \"deny\"\n        reason: \"Deny all other requests, the default is to allow everything\"\n</code></pre> <p>For more detailed information about rules, see the Rules page.</p>"},{"location":"configuration/rules/","title":"Rules Configuration","text":"<p>Rules define how Docker Socket Proxy handles incoming requests. Each rule consists of a match section and an actions section.</p>"},{"location":"configuration/rules/#rule-structure","title":"Rule Structure","text":"<p>Each rule in your configuration file looks like this:</p> <pre><code>- match:\n    path: \"/v1.*/containers/json\"  # Regex pattern for API path\n    method: \"GET\"                  # HTTP method\n    contains:                      # Optional content matching\n      Env:\n        - \"DEBUG=true\"\n  actions:\n    - action: \"allow\"              # Action to take\n      reason: \"Allow listing containers\" # Optional documentation\n</code></pre>"},{"location":"configuration/rules/#match-criteria","title":"Match Criteria","text":"<p>The <code>match</code> section determines when a rule applies:</p> Field Description Required Example <code>path</code> Regex pattern for the API path Yes <code>/v1.*/containers/json</code> <code>method</code> HTTP method to match No <code>GET</code>, <code>POST</code>, <code>DELETE</code> <code>contains</code> Content matching for request body No See below <p>The <code>path</code> field supports regular expressions to match Docker API endpoints. Common patterns include:</p> <ul> <li><code>/v1.*/containers/json</code> - List containers</li> <li><code>/v1.*/containers/create</code> - Create a container</li> <li><code>/v1.*/images/json</code> - List images</li> <li><code>/v1.*/volumes</code> - Volume operations</li> </ul> <p>The <code>method</code> field specifies which HTTP method to match. Common methods include:</p> <ul> <li><code>GET</code> - Retrieve information</li> <li><code>POST</code> - Create resources or trigger actions</li> <li><code>DELETE</code> - Remove resources</li> <li><code>PUT</code> - Update resources</li> </ul> <p>The <code>contains</code> field allows you to match based on the content of the request body. This is particularly useful for container creation requests where you want to match based on environment variables, volumes, or other container configuration.</p> <p>Example of content matching:</p> <pre><code>match:\n  path: \"/v1.*/containers/create\"\n  method: \"POST\"\n  contains:\n    Env:\n      - \"DEBUG=true\"\n    HostConfig:\n      Privileged: true\n</code></pre>"},{"location":"configuration/rules/#actions","title":"Actions","text":"<p>Each rule can have multiple actions. The actions are processed in order, allowing you to perform multiple operations on a single request.</p>"},{"location":"configuration/rules/#allow-action","title":"Allow Action","text":"<p>Allows the request to proceed:</p> <pre><code>actions:\n  - action: \"allow\"\n    reason: \"Allow listing containers\"\n</code></pre>"},{"location":"configuration/rules/#deny-action","title":"Deny Action","text":"<p>Denies the request and returns an error:</p> <pre><code>actions:\n  - action: \"deny\"\n    reason: \"Privileged containers are not allowed\"\n</code></pre>"},{"location":"configuration/rules/#upsert-action","title":"Upsert Action","text":"<p>Adds or updates fields in the request:</p> <pre><code>actions:\n  - action: \"upsert\"\n    update:\n      Env:\n        - \"SECURE=true\"\n      HostConfig:\n        ReadonlyRootfs: true\n</code></pre>"},{"location":"configuration/rules/#replace-action","title":"Replace Action","text":"<p>Replaces matching fields in the request:</p> <pre><code>actions:\n  - action: \"replace\"\n    contains:\n      HostConfig:\n        Privileged: true\n    update:\n      HostConfig:\n        Privileged: false\n</code></pre> <p>The <code>contains</code> field specifies which fields to match, and the <code>update</code> field specifies the replacement values.</p>"},{"location":"configuration/rules/#delete-action","title":"Delete Action","text":"<p>Deletes matching fields from the request:</p> <pre><code>actions:\n  - action: \"delete\"\n    contains:\n      Env:\n        - \"SECRET_.*\"\n</code></pre> <p>The <code>contains</code> field supports regular expressions for matching array elements like environment variables.</p>"},{"location":"configuration/rules/#processing-order","title":"Processing Order","text":"<p>Rules are processed sequentially in the order they appear in the configuration file. For each rule:</p> <ol> <li>The request is checked against the <code>match</code> criteria</li> <li>If the match succeeds, the <code>actions</code> are applied in order</li> <li>If an action is <code>allow</code> or <code>deny</code>, rule processing stops</li> <li>Otherwise, processing continues with the next rule</li> </ol>"},{"location":"configuration/rules/#examples","title":"Examples","text":""},{"location":"configuration/rules/#deny-privileged-containers","title":"Deny Privileged Containers","text":"<pre><code>- match:\n    path: \"/v1.*/containers/create\"\n    method: \"POST\"\n    contains:\n      HostConfig:\n        Privileged: true\n  actions:\n    - action: \"deny\"\n      reason: \"Privileged containers are not allowed\"\n</code></pre>"},{"location":"configuration/rules/#force-read-only-root-filesystem","title":"Force Read-Only Root Filesystem","text":"<pre><code>- match:\n    path: \"/v1.*/containers/create\"\n    method: \"POST\"\n  actions:\n    - action: \"upsert\"\n      update:\n        HostConfig:\n          ReadonlyRootfs: true\n</code></pre>"},{"location":"configuration/rules/#remove-sensitive-environment-variables","title":"Remove Sensitive Environment Variables","text":"<pre><code>- match:\n    path: \"/v1.*/containers/create\"\n    method: \"POST\"\n  actions:\n    - action: \"delete\"\n      contains:\n        Env:\n          - \"AWS_SECRET_.*\"\n          - \"PASSWORD=.*\"\n</code></pre>"},{"location":"configuration/rules/#add-required-labels","title":"Add Required Labels","text":"<pre><code>- match:\n    path: \"/v1.*/containers/create\"\n    method: \"POST\"\n  actions:\n    - action: \"upsert\"\n      update:\n        Labels:\n          socket-proxy: \"docker-socket-proxy\"\n</code></pre>"},{"location":"configuration/rules/#default-deny-rule","title":"Default Deny Rule","text":"<pre><code>- match:\n    path: \"/.*\"\n    method: \".*\"\n  actions:\n    - action: \"deny\"\n      reason: \"Deny all other requests, the default is to allow everything\"\n</code></pre>"}]}